name: Deploy
on:
  push:
    branches:
      - main

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: app
      ECR_TAG: production-${{ github.sha }}
      LAMBDA_FUNCTION_NAME: app
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::340752831962:role/deploy
      - uses: aws-actions/amazon-ecr-login@v2
        id: ecr
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.ECR_TAG }}
          provenance: false
      - name: Update lambda function - "${{ env.LAMBDA_FUNCTION_NAME }}"
        run: |
          aws lambda update-function-code \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --image-uri "${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.ECR_TAG }}"
          aws lambda wait function-updated-v2 \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }}
      - name: Pre-warm lambda function - "${{ env.LAMBDA_FUNCTION_NAME }}"
        run: |
          FUNCTION_URL=$( \
            aws lambda get-function-url-config \
            --function-name=${{ env.LAMBDA_FUNCTION_NAME }} \
            --query "FunctionUrl" \
            --output text \
          )
          echo "Pinging function ${{ env.LAMBDA_FUNCTION_NAME }} at $FUNCTION_URL"
          curl $FUNCTION_URL
